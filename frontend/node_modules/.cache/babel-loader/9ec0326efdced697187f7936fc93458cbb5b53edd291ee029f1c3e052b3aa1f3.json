{"ast":null,"code":"import axios from \"axios\";\n\n// Create new note\nexport async function addNote(userID, date, title, content) {\n  console.log(`Creating a new note, \n    \\nuser: ${userID}, \n    \\ndata: ${date}, \n    \\ntitle: ${title}, \n    \\ncontent: ${content}`);\n  const data = {\n    userID: userID,\n    title: title,\n    date: date,\n    content: content\n  };\n  try {\n    const response = await axios.post(`http://localhost:3000/api/addNote`, data);\n    console.log(\"Updated user notes, \", response.data);\n    return response.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\n// Query notes for a user\nexport async function getNotes(userID) {\n  console.log(`Retrieving notes for user: ${userID}`);\n  try {\n    const response = await axios.get(`http://localhost:3000/api/retrieveAllNotes`, {\n      params: {\n        userID: userID\n      }\n    });\n    console.log(\"User Notes \", response.data);\n    return response.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\n// Update existing notes\nexport async function updateNote(noteID, content) {\n  console.log(`Updating note:${noteID} with content:${content}`);\n  const data = {\n    noteID: noteID,\n    content: content\n  };\n  try {\n    const response = await axios.post(`http://localhost:3000/api/updateNote`, {\n      data: data\n    });\n    console.log('from update note service', response.data);\n    return response.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\n// Delete note\nexport async function deleteNote(userID, noteID) {\n  console.log(`Deleting note from user: ${userID} with id: ${noteID}`);\n  const data = {\n    userID: userID,\n    noteID: noteID\n  };\n  try {\n    const response = await axios.delete(\"http://localhost:3000/api/deleteNote\", {\n      data: data\n    });\n    console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n}","map":{"version":3,"names":["axios","addNote","userID","date","title","content","console","log","data","response","post","error","message","getNotes","get","params","updateNote","noteID","deleteNote","delete"],"sources":["/Users/willkoenig/Desktop/Personal Projects/Full Stack Practice/note-taking-app/frontend/src/services/noteFunctionalitiesServices.js"],"sourcesContent":["import axios from \"axios\";\n\n// Create new note\nexport async function addNote(userID, date, title, content) {\n  console.log(`Creating a new note, \n    \\nuser: ${userID}, \n    \\ndata: ${date}, \n    \\ntitle: ${title}, \n    \\ncontent: ${content}`)\n  const data = {\n    userID: userID,\n    title: title,\n    date: date,\n    content: content,\n  };\n  try {\n    const response = await axios.post(\n      `http://localhost:3000/api/addNote`,\n      data\n    );\n    console.log(\"Updated user notes, \", response.data);\n    return response.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\n\n// Query notes for a user\nexport async function getNotes(userID) {\n  console.log(`Retrieving notes for user: ${userID}`);\n  try {\n    const response = await axios.get(\n      `http://localhost:3000/api/retrieveAllNotes`,\n      {\n        params: {\n          userID: userID,\n        },\n      }\n    );\n    console.log(\"User Notes \", response.data);\n    return response.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\n// Update existing notes\nexport async function updateNote(noteID, content) {\n  console.log(`Updating note:${noteID} with content:${content}`);\n  const data = {\n    noteID: noteID,\n    content: content,\n  };\n  try {\n    const response = await axios.post(`http://localhost:3000/api/updateNote`, {\n      data: data,\n    });\n    console.log('from update note service', response.data);\n    return response.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\n// Delete note\nexport async function deleteNote(userID, noteID) {\n  console.log(`Deleting note from user: ${userID} with id: ${noteID}`);\n  const data = {\n    userID: userID,\n    noteID: noteID,\n  };\n  try {\n    const response = await axios.delete(\n      \"http://localhost:3000/api/deleteNote\",\n      { data: data }\n    );\n    console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,OAAO,eAAeC,OAAOA,CAACC,MAAM,EAAEC,IAAI,EAAEC,KAAK,EAAEC,OAAO,EAAE;EAC1DC,OAAO,CAACC,GAAG,CAAE;AACf,cAAcL,MAAO;AACrB,cAAcC,IAAK;AACnB,eAAeC,KAAM;AACrB,iBAAiBC,OAAQ,EAAC,CAAC;EACzB,MAAMG,IAAI,GAAG;IACXN,MAAM,EAAEA,MAAM;IACdE,KAAK,EAAEA,KAAK;IACZD,IAAI,EAAEA,IAAI;IACVE,OAAO,EAAEA;EACX,CAAC;EACD,IAAI;IACF,MAAMI,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAI,CAC9B,mCAAkC,EACnCF,IACF,CAAC;IACDF,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEE,QAAQ,CAACD,IAAI,CAAC;IAClD,OAAOC,QAAQ,CAACD,IAAI;EACtB,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdL,OAAO,CAACC,GAAG,CAACI,KAAK,CAACC,OAAO,CAAC;EAC5B;AACF;;AAGA;AACA,OAAO,eAAeC,QAAQA,CAACX,MAAM,EAAE;EACrCI,OAAO,CAACC,GAAG,CAAE,8BAA6BL,MAAO,EAAC,CAAC;EACnD,IAAI;IACF,MAAMO,QAAQ,GAAG,MAAMT,KAAK,CAACc,GAAG,CAC7B,4CAA2C,EAC5C;MACEC,MAAM,EAAE;QACNb,MAAM,EAAEA;MACV;IACF,CACF,CAAC;IACDI,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEE,QAAQ,CAACD,IAAI,CAAC;IACzC,OAAOC,QAAQ,CAACD,IAAI;EACtB,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdL,OAAO,CAACC,GAAG,CAACI,KAAK,CAACC,OAAO,CAAC;EAC5B;AACF;;AAEA;AACA,OAAO,eAAeI,UAAUA,CAACC,MAAM,EAAEZ,OAAO,EAAE;EAChDC,OAAO,CAACC,GAAG,CAAE,iBAAgBU,MAAO,iBAAgBZ,OAAQ,EAAC,CAAC;EAC9D,MAAMG,IAAI,GAAG;IACXS,MAAM,EAAEA,MAAM;IACdZ,OAAO,EAAEA;EACX,CAAC;EACD,IAAI;IACF,MAAMI,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAI,CAAE,sCAAqC,EAAE;MACxEF,IAAI,EAAEA;IACR,CAAC,CAAC;IACFF,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEE,QAAQ,CAACD,IAAI,CAAC;IACtD,OAAOC,QAAQ,CAACD,IAAI;EACtB,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdL,OAAO,CAACC,GAAG,CAACI,KAAK,CAACC,OAAO,CAAC;EAC5B;AACF;;AAEA;AACA,OAAO,eAAeM,UAAUA,CAAChB,MAAM,EAAEe,MAAM,EAAE;EAC/CX,OAAO,CAACC,GAAG,CAAE,4BAA2BL,MAAO,aAAYe,MAAO,EAAC,CAAC;EACpE,MAAMT,IAAI,GAAG;IACXN,MAAM,EAAEA,MAAM;IACde,MAAM,EAAEA;EACV,CAAC;EACD,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAMT,KAAK,CAACmB,MAAM,CACjC,sCAAsC,EACtC;MAAEX,IAAI,EAAEA;IAAK,CACf,CAAC;IACDF,OAAO,CAACC,GAAG,CAACE,QAAQ,CAACD,IAAI,CAAC;IAC1B,OAAOC,QAAQ,CAACD,IAAI;EACtB,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdL,OAAO,CAACC,GAAG,CAACI,KAAK,CAACC,OAAO,CAAC;EAC5B;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}